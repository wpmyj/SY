/*
*********************************************************************************************************
* @file    	MY_DEBUG.h
* @author  	SY
* @version 	V1.0.0
* @date    	2016-12-5 10:07:04
* @IDE	 	Keil V5.22.0.0
* @Chip    	STM32F407VE
* @brief   	调试信息处理机制
*********************************************************************************************************
* @attention
*	支持2种DEBUG调试方式：(1) 占用一路串口，将调试信息发送到电脑端“串口调试助手”。(2) 使用Jlink调试，将
*		调试信息通过Jlink发送给keil，在硬件仿真界面，依次打开 view --> serial windows --> Debug (printf) viewer
*	即可查看调试信息。 具体步骤参见："bsp_itm.c"描述。
* 
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                              				Define to prevent recursive inclusion
*********************************************************************************************************
*/
#ifndef __MY_DEBUG_H
#define __MY_DEBUG_H
	
/*
*********************************************************************************************************
*                              				Exported define
*********************************************************************************************************
*/
/* 调试总开关 */
#define ENABLE_DEBUG						0x01U

#if (ENABLE_DEBUG == 0x01U)
	#define __DEBUG__						0x01U	/* 0x01U：使能DEBUG打印信息 		*/	
	#define DEBUG_USE_JLINK					0x00U	/* 0x01U：使用Jlink打印调试信息 	*/
	#define DEBUG_USE_USART					0x01U	/* 0x01U：使用USART打印调试信息 	*/
#else 
	#define __DEBUG__						0x00U	
	#define DEBUG_USE_JLINK					0x00U
	#define DEBUG_USE_USART					0x00U
#endif

#if ((DEBUG_USE_JLINK!=0x00U) && (DEBUG_USE_USART!=0x00U))
	#error "两种 DEBUG 方式只能选择一种！"
#endif

#define DEBUG_ON           					0x80U
#define DEBUG_OFF           				0x00U

#define DEBUG_UNIT_TEST						DEBUG_OFF	/* 单元测试 			*/

/*
*********************************************************************************************************
*                              				BSP
*********************************************************************************************************
*/
#define DEBUG_BSP_INIT						DEBUG_ON	/* BSP初始化 */
#define DEBUG_BSP_TIMER						DEBUG_ON	/* BSP定时器 */
#define DEBUG_BSP_IO						DEBUG_ON	/* BSP输入输出 */
#define DEBUG_BSP_USB						DEBUG_ON	/* BSP USB */
#define DEBUG_BSP_ETH						DEBUG_ON	/* BSP 以太网 */

/*
*********************************************************************************************************
*                              				KERNEL
*********************************************************************************************************
*/
#define DEBUG_KERNEL_INIT					DEBUG_ON	/* 内核初始化 */
#define DEBUG_KERNEL_KEY					DEBUG_ON	/* 内核按键 */
#define DEBUG_KERNEL_HID					DEBUG_ON	/* 内核HID设备 */
#define DEBUG_KERNEL_IO						DEBUG_ON	/* 内核IO */
#define DEBUG_KERNEL_SHELL					DEBUG_ON	/* 内核SHELL */

/*
*********************************************************************************************************
*                              				APP
*********************************************************************************************************
*/
#define DEBUG_APP_INIT						DEBUG_ON	/* APP初始化 */
#define DEBUG_APP_WINDOWS					DEBUG_ON	/* APP窗口 */
#define DEBUG_APP_EMWIN						DEBUG_ON	/* APP emWin */


/*
*********************************************************************************************************
*                              				Exported types
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                              				Exported constants
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                              				Exported functions
*********************************************************************************************************
*/
extern void ECHO_SAFE(char *format, ...);

/*
*********************************************************************************************************
*                              				Exported macro
*********************************************************************************************************
*/
#if (__DEBUG__ == 0x01U)
	#define ECHO(debug,...)					do {\
												if ((debug) & DEBUG_ON) {\
													ECHO_SAFE(__VA_ARGS__);\
												}\
											} while(0)  
#else  
	#define ECHO(debug,...) ((void)0)
#endif
	
/*
*********************************************************************************************************
*                              				Exported variables
*********************************************************************************************************
*/



#endif
/************************ (C) COPYRIGHT STMicroelectronics **********END OF FILE*************************/
